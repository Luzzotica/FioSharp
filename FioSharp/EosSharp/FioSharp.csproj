<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Authors>Sterling Long</Authors>
    <Company>FIO</Company>
    <PackageTags>FIO, NetStandard, secp256k1, Blockchain</PackageTags>
    <Description>C# client library for FIO blockchain. The library is based on https://github.com/EOSIO/eosjs and MIT licensed.</Description>
    <PackageLicenseUrl>https://github.com/GetScatter/eos-sharp/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/GetScatter/eos-sharp</PackageProjectUrl>
    <RepositoryUrl>https://github.com/GetScatter/eos-sharp</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <Copyright>Copyright 2019</Copyright>
    <Product>fio-sharp</Product>
    <PackageId>fio-sharp</PackageId>
    <AssemblyVersion>1.0.2.0</AssemblyVersion>
    <FileVersion>1.0.2.0</FileVersion>
    <Version>1.0.2</Version>
    <PackageReleaseNotes>Increased usability of CryptoHelper class to make it easier to create Fio Req transactions.</PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <ReleaseVersion>1.0.2</ReleaseVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NBitcoin" Version="7.0.7" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FioSharp.Secp256k1\FioSharp.Secp256k1.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\EosSharp.Core\FioSharp.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
  
  <!--
    The following solves the problem that 'dotnet pack' does not include the DLLs from referenced projects.
    See https://github.com/NuGet/Home/issues/3891 for a description of the problem
    and for newer versions / workarounds / built-in methods.
  -->
  <ItemGroup>
    <None Remove="NBitcoin" />
    <None Remove="Models\" />
    <None Remove="Util\" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Models\" />
    <Folder Include="Util\" />
  </ItemGroup>
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <!-- include PDBs in the NuGet package -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>
